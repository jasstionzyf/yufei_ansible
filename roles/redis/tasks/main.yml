- name: start app
  shell:  bash -l -c ' nohup {{app_rootDir}}{{appName}}/src/redis-server {{app_confRootDir}}{{appName}}/redis.conf &'
#  when: as_hadoop_slave
  tags: redis_start
  async: 30
  poll: 2


- name: install debian dependencies
  become: yes
  become_user: root
  tags: redis_install
  apt:
    pkg:
      - gcc
      - make
      - libc6-dev
      - gcc
      - tcl
    update_cache: yes
    cache_valid_time: 86400
    state: present
- name: make sure all related folders present, if present do nothing
  become: yes
  become_user: root
  tags: redis_install
  file:
    path: "{{item}}"
    owner: zhaoyufei
    group: hadoop
    mode: u=rwx,g=xr,o=x
    recurse: yes
    state: directory
  loop:
    - "{{app_logRootDir}}{{appName}}/"
    - "{{app_dataRootDir}}{{appName}}/"
    - "{{app_confRootDir}}{{appName}}/"
    - "{{app_rootDir}}{{appName}}/"

- name: upload app and unzip to  remote machine
  become: yes
  become_user: root
  tags: redis_install
  unarchive:
    src: "{{app_libary_path}}"
    dest: "{{app_rootDir}}{{appName}}/"
    extra_opts: [--strip-components=1]
#    creates: "{{app_rootDir}}{{appName}}/"
    owner: zhaoyufei
    group: hadoop
    mode: u=rwx,g=xr,o=x


- name: app config files
  template:
    dest: "{{app_confRootDir}}{{appName}}/{{item.dest}}"
    src: templates/{{item.src}}
    mode: u=rw,g=r,o=r
    owner: zhaoyufei
    group: hadoop
  become: yes
  become_user: root
  tags: redis_config
  with_items:
        - {src: 'redis.conf',dest: 'redis.conf'}

- name: enable overcommit in sysctl
  become: yes
  become_user: root
  tags: redis_install
  sysctl:
    name: vm.overcommit_memory
    value: "1"
    state: present
    reload: yes
    ignoreerrors: yes
- name: compile redis
  become: yes
  become_user: root
  tags: redis_install
  shell: make install
  args:
    chdir: "{{app_rootDir}}{{appName}}/"
    creates: "{{app_rootDir}}{{appName}}/src/redis-server"





#- name: check if redis user exists (ignore errors)
#  command: id {{ redis_user }}
#  ignore_errors: yes
#  changed_when: false
#  register: user_exists
#
#- name: add redis group
#  group:
#    name: "{{ redis_group }}"
#    state: present
#  when: user_exists is failed
#
#- name: add redis user
#  user:
#    name: "{{ redis_user }}"
#    group: "{{ redis_group }}"
#    comment: "Redis"
#    home: "{{ redis_install_dir }}"
#    shell: /bin/false
#    system: yes
#  when: user_exists is failed
#
#- name: create /var/run/redis
#  file:
#    path: /var/run/redis
#    state: directory
#    owner: "{{ redis_user }}"

#- name: install redis
#  become: yes
#  become_user: root
#  tags: redis_install
#  shell: umask 0022 && make PREFIX={{app_rootDir}}{{appName}} install
#  args:
#    chdir: /usr/local/src/redis-{{ redis_version }}
#    creates: "{{ redis_install_dir }}/bin/redis-server"
#
#- name: list redis binaries to add to alternatives
#  become: yes
#  become_user: root
#  tags: redis_install
#  command: ls -1 {{ redis_install_dir }}/bin
#  register: redis_binaries
#  changed_when: false
#
#- name: add redis binaries to alternatives
#  become: yes
#  become_user: root
#  tags: redis_install
#  alternatives:
#    name: "{{ item }}"
#    path: "{{ redis_install_dir }}/bin/{{ item }}"
#    link: "/usr/bin/{{ item }}"
#  with_items: "{{ redis_binaries.stdout_lines }}"
#  when: redis_binaries is succeeded